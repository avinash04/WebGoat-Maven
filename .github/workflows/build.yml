name: "WebGoat-Maven"
on:
    push:
        branches:
            - "**"
    pull_request:
        types:
            - closed
        branches:
            - main
    workflow_dispatch:

permissions:
    id-token: write # This is required for requesting the JWT

jobs:
    mvn-build-and-publish:
        runs-on: ubuntu-latest
        env:
            BUILD_NAME: 'webgoat-app'
            JFROG_BUILD_STATUS: PASS
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up JDK 21
              uses: actions/setup-java@v4.2.1
              with:
                   distribution: 'temurin'
                   java-version: 21
                   architecture: x64
            - name: JFrog CLI setup üê∏
              uses: jfrog/setup-jfrog-cli@v4
              env:
                  JF_URL: ${{ secrets.JF_URL }}
                  #JF_ACCESS_TOKEN: ${{secrets.JF_ACCESS_TOKEN}}
                  JF_GIT_TOKEN: ${{ secrets.JF_GIT_TOKEN }}
              with:
                    oidc-provider-name: avi-github
                    version: latest
            - name: Health check JFrog Artifactory instance üê∏
              run: |
                  jf --version
                  jf rt ping
                  # jf config show
            - name: Build Maven Package
              run: |
                  jf mvnc --repo-resolve-releases=avi-mvn-dev-virtual --repo-resolve-snapshots=avi-mvn-dev-virtual --repo-deploy-releases=avi-mvn-dev-virtual --repo-deploy-snapshots=avi-mvn-dev-virtual
                  jf mvn clean install -f pom.xml -Dmaven.test.skip=true -Dartifactory.publish.artifacts=true --build-name ${{env.BUILD_NAME}} --build-number ${{github.run_number}} --project=${{secrets.PROJECT_KEY}}
           # - name: Login to JFrog Docker repo
            #  uses: docker/login-action@v3
             # with:
              #    registry: ${{ secrets.JF_URL }}
               #   username: ${{secrets.DOCKER_USERNAME}}
                #  password: ${{secrets.JF_ACCESS_TOKEN}}
            - name: Docker Build üê≥üê∏ and scan
              run: |
                  jf docker build . -t soleng.jfrog.io/avi-docker-virtual/webgoat-maven:${{github.run_number}}
                  jf docker scan soleng.jfrog.io/avi-docker-virtual/webgoat-maven:${{github.run_number}}
                  jf docker push soleng.jfrog.io/avi-docker-virtual/webgoat-maven:${{github.run_number}}
            #- name: Audit
             # run: |
              #    jf audit
            - name: Publish build build-info
              run: |
                  # Collect and store environment variables in the build-info
                  jf rt bce ${{env.BUILD_NAME}} ${{github.run_number}} --project=${{secrets.PROJECT_KEY}}
                  # Collect and store VCS details in the build-info
                  jf rt bag ${{env.BUILD_NAME}} ${{github.run_number}} --project=${{secrets.PROJECT_KEY}}
                  # Publish the build-info to Artifactory
                  jf rt bp ${{env.BUILD_NAME}} ${{github.run_number}} --project=${{secrets.PROJECT_KEY}}
                  # Scan the published build-info with Xray
                  jf bs ${{env.BUILD_NAME}} ${{github.run_number}} --fail=false --project=${{secrets.PROJECT_KEY}}
